{"version":3,"sources":["images/01.png","images/02.png","images/zalo-icon.png","images/messenger-icon.png","images/phone.png","images/contactus-icon.png","components/slideshow-gallery/slideshow-gallery.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","SlideshowGallery","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","slideIndex","ratioWHArray","ratio","split","ratioWH","backward","bind","assertThisInitialized","forward","setSlideIndex","getNewSlideIndex","updateDimensions","runAutomatic","step","numberSlide","input","length","newSlideIndex","setState","index","containerElm","style","height","concat","offsetWidth","_this2","rootElm","ReactDOM","findDOMNode","querySelector","window","addEventListener","mode","timeout","automaticInterval","setInterval","Number","parseInt","removeEventListener","clearInterval","_this3","react_default","a","createElement","className","map","image","key","src","alt","caption","onClick","React","Component","collection","img1","img2","App","slideshow_gallery_SlideshowGallery","class","href","id","color","zaloIcon","messIcon","phone","reportWebVitals","onPerfEntry","Function","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e767dd21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/01.aca2dabe.png\";","module.exports = __webpack_public_path__ + \"static/media/02.d8afa23e.png\";","module.exports = __webpack_public_path__ + \"static/media/zalo-icon.248baf33.png\";","module.exports = __webpack_public_path__ + \"static/media/messenger-icon.433ba0a0.png\";","module.exports = __webpack_public_path__ + \"static/media/phone.6e873cd8.png\";","module.exports = __webpack_public_path__ + \"static/media/contactus-icon.cb437106.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './slideshow-gallery.css';\r\n\r\nexport default class SlideshowGallery extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    /*\r\n    * State slideIndex dùng để xác định xem slide nào đang được active.\r\n    * Các ảnh sẽ được xếp chồng lên nhau, cái nào active thì hiển thị,\r\n    * Cái nào không active thì ẩn đi.\r\n    */\r\n    this.state = {\r\n      slideIndex: 0\r\n    };\r\n\r\n    /*\r\n    * Khi sử dụng, mình sẽ truyền thuộc tính ratio, giả sử là \"3:2\"\r\n    * Như vậy, tỉ lệ width/height là this.ratioWH = 3 / 2\r\n    * Mình sẽ điều chỉnh các ảnh sao cho về cùng 1 kích thước.\r\n    */\r\n    const ratioWHArray = this.props.ratio.split(\":\");\r\n    this.ratioWH = ratioWHArray[0] / ratioWHArray[1];\r\n\r\n    this.backward = this.backward.bind(this);\r\n    this.forward = this.forward.bind(this);\r\n    this.setSlideIndex = this.setSlideIndex.bind(this);\r\n    this.getNewSlideIndex = this.getNewSlideIndex.bind(this);\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n    this.runAutomatic = this.runAutomatic.bind(this);\r\n  }\r\n\r\n  /*\r\n  * Tính chỉ số SlideIndex mới, với step là bước nhảy: +1 hoặc -1\r\n  * Giả sử, mình có 6 ảnh => các chỉ số lần lượt là: 0, 1, 2,...5\r\n  * Chú ý:\r\n  * Nếu đang ở chỉ số 5 mà đi về phía sau thì slideIndex = 0\r\n  * Nếu đang ở chỉ số 0 mà về trước thì slideIndex = 5\r\n  */\r\n  getNewSlideIndex(step) {\r\n    const slideIndex = this.state.slideIndex;\r\n    const numberSlide = this.props.input.length;\r\n\r\n    let newSlideIndex = slideIndex + step;\r\n\r\n    if (newSlideIndex >= numberSlide) newSlideIndex = 0;\r\n    else if (newSlideIndex < 0) newSlideIndex = numberSlide - 1;\r\n\r\n    return newSlideIndex;\r\n  }\r\n\r\n  // Quay về ảnh phía trước, tức index giảm 1 => step = -1\r\n  backward() {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(-1)\r\n    });\r\n  }\r\n\r\n  // Tiến tới ảnh phía sau, tức index tăng 1 => step = 1\r\n  forward() {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(1)\r\n    });\r\n  }\r\n\r\n  // Xác định slideIndex nào sẽ được active\r\n  setSlideIndex(index) {\r\n    this.setState({\r\n      slideIndex: index\r\n    })\r\n  }\r\n\r\n  /*\r\n  * Cập nhật chiều cao cho container khi thay đổi kích thước màn hình\r\n  * Trong phần CSS, mình để container có width = 100%,\r\n  * Nên dù kéo to hay thu nhỏ thì width vẫn bằng 100% kích thước parent.\r\n  * Nhưng chiều cao là giá trị tuyệt đối nên phải tính lại,\r\n  * dựa vào width và tỉ lệ this.ratioWH = width / height\r\n  *\r\n  * Chú ý: ví dụ Slideshow Gallery này khác với ví dụ Slideshow thông thường\r\n  * ở chỗ là mình thay những chấm tròn ở dưới thành dãy các ảnh.\r\n  * Vì vậy, mình cũng phải tính lại chiều cao của phần đó - this.containerBottomElm.\r\n  *\r\n  * Ngoài ra, số lượng ảnh ở phía dưới là this.props.input.length chứ không phải 1 ảnh\r\n  * nên mình phải chia cho this.props.input.length - đây là phần khác so với\r\n  * khi tính toán với this.containerElm\r\n  */\r\n  updateDimensions() {\r\n    this.containerElm.style.height \r\n      = `${this.containerElm.offsetWidth / this.ratioWH}px`;\r\n    // this.containerBottomElm.style.height \r\n    //   = `${this.containerBottomElm.offsetWidth / this.props.input.length / this.ratioWH}px`;\r\n  }\r\n\r\n  /*\r\n  * Nếu người dùng truyền vào thuộc tính mode = automatic\r\n  * thì Slideshow Gallery sẽ chạy tự động dựa vào interval.\r\n  * Hàm này sẽ được gọi trong mỗi lượt lặp lại\r\n  * để cập nhật slideIndex mới cho Slideshow Gallery\r\n  */\r\n  runAutomatic() {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(1)\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Hàm này thuộc về React Component Lifecycle\r\n  * được gọi sau khi component này được render xong\r\n  * Trong đây, sẽ lưu lại reference cho container - this.containerElm\r\n  * Cập nhật lại chiều cao cho container - this.updateDimensions();\r\n  * Đăng ký sự kiện thay đổi kích thước - resize\r\n  * Kiểm tra nếu mode === \"automatic\" thì sẽ tạo mới một interval\r\n  * để thay đổi hình ảnh - this.runAutomatic()\r\n  * với giá trị timeout được truyền từ props hoặc mặc định là 5000 ms\r\n  */\r\n  componentDidMount() {\r\n    this.rootElm = ReactDOM.findDOMNode(this);\r\n    this.containerElm = this.rootElm.querySelector(\".slide-container\");\r\n\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n\r\n    if (this.props.mode === \"automatic\") {\r\n      const timeout = this.props.timeout || 5000;\r\n\r\n      this.automaticInterval = setInterval(\r\n        () => this.runAutomatic(),\r\n        Number.parseInt(timeout)\r\n      );\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Hàm này cũng thuộc về React Component Lifecycle -\r\n  * được gọi khi component này bị xóa khỏi màn hình\r\n  * Lúc này, mình phải hủy bỏ sự kiện khi resize\r\n  * và xóa bỏ interval đã khai bảo bên trên để tránh leak memory.\r\n  */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n    if (this.automaticInterval) clearInterval(this.automaticInterval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lp-slideshow-gallery\">\r\n        <div className=\"slide-container\">\r\n          {\r\n            this.props.input.map((image, index) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={\r\n                    `slide ${this.state.slideIndex === index ? \"active\" : \"\"}`\r\n                  }\r\n                >\r\n                  <img className=\"image\" src={image.src} alt={image.caption} />\r\n                  {/* <div className=\"caption-text\">{image.caption}</div> */}\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n\r\n          <span className=\"prev\" onClick={this.backward}>❮</span>\r\n          <span className=\"next\" onClick={this.forward}>❯</span>\r\n        </div>\r\n        <div className=\"dot-map\">\r\n            {\r\n                this.props.input.map((image, index) => {\r\n                    return (\r\n                        <span \r\n                            key={index}\r\n                            className=\"dot\" \r\n                            onClick={() => this.setSlideIndex(index)}>\r\n                        </span>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n\r\n        {/* <div className=\"container-bottom\" >\r\n          {\r\n            this.props.input.map((image, index) => {\r\n              return (\r\n                <img\r\n                  key={index}\r\n                  src={image.src}\r\n                  alt={image.caption}\r\n                  className={\r\n                    `image ${this.state.slideIndex === index ? \"active\" : \"\"}`\r\n                  }\r\n                  onClick={() => this.setSlideIndex(index)}\r\n                  style={{\r\n                    width: `${1 / this.props.input.length * 100}%`,\r\n                    height: `100%`\r\n                  }}\r\n                />\r\n              )\r\n            })\r\n          }\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport SlideshowGallery from './components/slideshow-gallery/slideshow-gallery';\n\nimport img1 from './images/01.png';\nimport img2 from './images/02.png';\nimport zaloIcon from './images/zalo-icon.png';\nimport messIcon from './images/messenger-icon.png';\nimport phone from './images/phone.png'\n// eslint-disable-next-line\nimport contactUs from './images/contactus-icon.png'\n\nconst collection = [\n\t{ src: img1 },\n\t{ src: img2 },\n]\n\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className='site-header'>\n\n\t\t\t\t<SlideshowGallery\n\t\t\t\t\tinput={collection}\n\t\t\t\t\ttimeout=\"10000\"\n\t\t\t\t\tratio={`16:5`}\n\t\t\t\t\tmode={`automatic`}\n\t\t\t\t/>\n\t\t\t</header>\n\t\t\t<div className='content container'>\n\t\t\t\t<div >\n\t\t\t\t\t<h2>Xin chào!</h2>\n\t\t\t\t\t<p>Bên Mình Chuyên Cung Cấp Các Dịch Vụ</p>\n\t\t\t\t\t<p>Rút Tiền/Đáo Hạn Thẻ Tín Dụng</p>\n\t\t\t\t\t<a class=\"hero-button\" href=\"tel:0888666665\">Gọi ngay</a>\n\t\t\t\t</div>\n\t\t\t\t<div className='context'>\n\t\t\t\t\t<h2 class=\"text-center\">Rút Tiền Thẻ Tín Dụng Tại Nhà</h2>\n\t\t\t\t\t<p class=\"text-center\">Tư Vấn Và Phục Vụ 24/7</p>\n\t\t\t\t\t<h2 class=\"text-center\">Đáo Hạn Thẻ Tín Dụng</h2>\n\t\t\t\t\t<p class=\"text-center\">Đáo Hạn Tại Nhà</p>\n\t\t\t\t\t<p class=\"text-center\">Chỉ từ 1,9%/Tháng</p>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"direct\" class=\"direct\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t{/* <img src={contactUs} alt=\"Contact Icon\"></img> */}\n\t\t\t\t\t\t\t<h2>Liên hệ</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h1>Mr. Tùng(Hỗ trợ 24/7)</h1>\n\t\t\t\t\t\t<a href=\"tel:0982670613\" >\n\t\t\t\t\t\t\t<span style={{color: \"#222\"}}>\n\t\t\t\t\t\t\t\t0982670613\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"quick-contact\">\n\t\t\t\t\t\t<a href=\"https://zalo.me/0888666665\" id=\"zalo\">\n\t\t\t\t\t\t\t<img src={zaloIcon} alt='Zalo Icon'></img>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href=\"https://m.me/100023251818361\">\n\t\t\t\t\t\t\t<img src={messIcon} alt=\"Messenger Icon\"></img>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href=\"tel:0982670613\">\n\t\t\t\t\t\t\t<img src={phone} alt=\"Phone Icon\"></img>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<footer>\n\t\t\t\t<h3 class=\"text-center\">Cám Ơn Mọi Người Đã Quan Tâm!</h3>\n\t\t\t\t<span>\n\t\t\t\t\tHotline: <a href=\"tel:0982670613\" style={{color: \"white\"}}>0582073186</a>\n\t\t\t\t</span>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}